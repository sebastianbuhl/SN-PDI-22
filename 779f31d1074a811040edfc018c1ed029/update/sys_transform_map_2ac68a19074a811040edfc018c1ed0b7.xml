<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_transform_map">
    <sys_transform_map action="INSERT_OR_UPDATE">
        <active>true</active>
        <copy_empty_fields>false</copy_empty_fields>
        <create_new_record_on_empty_coalesce_fields>false</create_new_record_on_empty_coalesce_fields>
        <enforce_mandatory_fields>No</enforce_mandatory_fields>
        <name>UC13/14 TEST load Transformer</name>
        <order>100</order>
        <run_business_rules>true</run_business_rules>
        <run_script>true</run_script>
        <script><![CDATA[(function transformRow(source, target, map, log, isUpdate) {

	// Add your code here
/**
 * Setting up Initial values and script-wide vars;
 * @var aChoiceSysID contains the sys_choice entries for the input variable "product_type"
 * @var aInputSysID contains the sys_decision_input entries that define the input variables and input categories
 * 
 */

	var aInputSysID = ['7cb29d5ddba5c91094caef0bd396197c', 'c1b211dddba5c91094caef0bd396196c', '05b211dddba5c91094caef0bd3961982'];
	var aChoiceSysID = ['85b211dddba5c91094caef0bd39619bb', '91b211dddba5c91094caef0bd39619c1', '15b211dddba5c91094caef0bd39619be', '41b211dddba5c91094caef0bd39619ac', '8db211dddba5c91094caef0bd39619a7', '11b211dddba5c91094caef0bd39619c4'];
	var strInputNameBase = 'var__m_sys_decision_input_';
	var strNewMatrixSysID;

	var strCountry = source.u_country;
	var strProduct = source.u_product;
	var strHCP = source.u_hcp;
	var strPO = source.u_po;
	var strBranch = source.u_branch;
	var strEncTableQueryy = 'name=Sponsorship Matrix - ' + strCountry;

	//gs.info('--->SBU DBG country: ' + strCountry + ' HCP present: ' + strHCP + ' Product: ' + strPO + ' Query: ' + strEncTableQueryy);

	var grDecTable = new GlideRecord('sys_decision');
	grDecTable.addEncodedQuery(strEncTableQueryy);
	grDecTable.query();

	if (grDecTable.next()) {
		var strExistingDecTableSysID = grDecTable.getValue('sys_id') + '';
		generateQuestion(strExistingDecTableSysID, strProduct, strHCP, strPO, strBranch, strCountry);
	} else {
		generateMatrix(strCountry);
		generateInput(aInputSysID, strNewMatrixSysID);
		generateChoices(aChoiceSysID, strNewMatrixSysID);
		generateQuestion(strNewMatrixSysID, strProduct, strHCP, strPO, strBranch, strCountry);
	}

	if(action =="insert"){
		ignore = true;
	}



	function generateMatrix(strCountry) {
		var grCopyMatrix = new GlideRecord('sys_decision');
		grCopyMatrix.get('71dbc519dba5c91094caef0bd39619af');
		grCopyMatrix.name = 'Sponsorship Matrix - ' + strCountry;
		strNewMatrixSysID = grCopyMatrix.insert();
	}

	function generateInput(arrayIDstoCopy, strDecTableSysID) {

		for (i = 0; i < arrayIDstoCopy.length; i++) {
			var grTemplateInput = new GlideRecord('sys_decision_input');
			grTemplateInput.get(arrayIDstoCopy[i]);
			grTemplateInput.name = strInputNameBase + strDecTableSysID + '';
			grTemplateInput.model = strDecTableSysID;
			grTemplateInput.model_id = strDecTableSysID;
			grTemplateInput.insert();
		}
	}

	function generateChoices(aChoiceSysID, strDecTableSysID) {

		var grProductTypeChoice = new GlideRecord('sys_choice');
		for (i = 0; i < aChoiceSysID.length; i++) {
			grProductTypeChoice.get(aChoiceSysID[i]);
			grProductTypeChoice.name = strInputNameBase + strDecTableSysID + '';
			grProductTypeChoice.insert();
		}

	}

	function generateQuestion(strDecTableSysID, strProductType, strHCP, strPO, strBranch, strCountry) {
		var strBinaryCombination = strHCP + strPO + '';
		var iCategoryVal;
		var iLogicVal;

		//gs.info(strBinaryCombination + ' ' + strProductType);

		switch (strProductType + '') {
			case 'otc_drug':
				iCategoryVal = 100;
				break;
			case 'prescription_drug':
				iCategoryVal = 200;
				break;
			case 'cosmetic':
				iCategoryVal = 300;
				break;
			case 'food_supplement':
				iCategoryVal = 400;
				break;
			case 'crop_science':
				iCategoryVal = 500;
				break;
			case 'sponsoring_not_related':
				iCategoryVal = 600;
				break;
				default: iCategoryVal = 998;
		}

		switch (strBinaryCombination) {
			case 'truetrue':
				iLogicVal = 20;
				break;
			case 'truefalse':
				iLogicVal = 40;
				break;
			case 'falsetrue':
				iLogicVal = 60;
				break;
			case 'falsefalse':
				iLogicVal = 80;
				break;
				default: iCategoryVal = 1;
		}

		var iOrder = iCategoryVal + iLogicVal;

		var grQuestion = new GlideRecord('sys_decision_question');
		grQuestion.initialize();
		grQuestion.active = true;
		grQuestion.answer = strBranch;
		grQuestion.condition = 'u_product_type=' + strProductType + '^u_hcp_participation=' + strHCP + '^u_po_organizer=' + strPO + '^EQ';
		grQuestion.decision_table = strDecTableSysID;
		grQuestion.input_table = strInputNameBase + strDecTableSysID + '';
		grQuestion.label = 'Sponsorship Matrix - ' + strCountry + '_' + iOrder + '';
		grQuestion.order = iOrder;
		grQuestion.insert();
	}

})(source, target, map, log, action==="update");]]></script>
        <source_table>x_590562_uc_13_1_0_import_dec_spr</source_table>
        <sys_class_name>sys_transform_map</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-03-04 12:50:58</sys_created_on>
        <sys_id>2ac68a19074a811040edfc018c1ed0b7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>UC13/14 TEST load Transformer</sys_name>
        <sys_package display_value="UC 13/14 Demo" source="x_590562_uc_13_1_0">779f31d1074a811040edfc018c1ed029</sys_package>
        <sys_policy/>
        <sys_scope display_value="UC 13/14 Demo">779f31d1074a811040edfc018c1ed029</sys_scope>
        <sys_update_name>sys_transform_map_2ac68a19074a811040edfc018c1ed0b7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-03-04 12:50:58</sys_updated_on>
        <target_table>incident</target_table>
    </sys_transform_map>
</record_update>
